-AUTH_PASSWORD_VALIDATORS - uncomment
https://github.com/app-generator/django-datta-able/blob/master/apps/templates/home/index.html -- our template source
-DEBUG = TRUE 
https://developerzen.com/best-practices-writing-production-grade-pyspark-jobs-cb688ac4d20f


https://www.java-success.com/10-databricks-spark-ml-linear-regression/



Good sources 
https://link.springer.com/book/10.1007/978-1-4302-5810-0 - Pro django 

https://django-simple-history.readthedocs.io/en/latest/quick_start.html - django simple history 


https://stackoverflow.com/questions/501719/dynamically-adding-a-form-to-a-django-formset - formsets, dynamic forms, add button 

https://stackoverflow.com/questions/71967813/django-django-filter-and-pagination  - filter with pagination example provided by Kaiss B.


http://rasbt.github.io/mlxtend/user_guide/feature_selection/ExhaustiveFeatureSelector/


https://stackabuse.com/applying-wrapper-methods-in-python-for-feature-selection/


https://github.com/rasbt/mlxtend/issues/41 --- subsets selection in mlextend 

 https://django-datta-able.appseed-srv1.com/


 https://stackoverflow.com/questions/27928275/find-p-value-significance-in-scikit-learn-linearregression


 https://patsy.readthedocs.io/en/latest/overview.html statsmodels categorical variable encoding 


 https://www.andrewvillazon.com/logistic-regression-python-statsmodels/ - stats model tutorial

Setting threhsolds 
 https://towardsdatascience.com/calculating-and-setting-thresholds-to-optimise-logistic-regression-performance-c77e6d112d7e#:~:text=The%20logistic%20regression%20assigns%20each,0.5%20is%20the%20default%20threshold.


 https://django-volt-dashboard.appseed-srv1.com/dashboard.html#top


 https://daniel.feldroy.com/posts/adding-django-form-instance-attributes - how to add user information to forms

 /home/ashleyubuntu/model_builder/model_builder_venv/lib/python3.8/site-packages/django/test/client.py
    def _encode_json(self, data, content_type):
        """
        Return encoded JSON if data is a dict, list, or tuple and content_type
        is application/json.
        """
        should_encode = JSON_CONTENT_TYPE_RE.match(content_type) and isinstance(
            data, (dict, list, tuple)
        )
        return json.dumps(data, cls=self.json_encoder) if should_encode else data
