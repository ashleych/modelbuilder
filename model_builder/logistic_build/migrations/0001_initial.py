# Generated by Django 4.1.5 on 2023-01-12 04:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassificationMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('FPR', models.TextField(blank=True, max_length=20000, null=True)),
                ('TPR', models.TextField(blank=True, max_length=20000, null=True)),
                ('areaUnderROC', models.FloatField(blank=True, null=True)),
                ('fp', models.FloatField(blank=True, null=True)),
                ('tp', models.FloatField(blank=True, null=True)),
                ('fn', models.FloatField(blank=True, null=True)),
                ('tn', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('npv', models.FloatField(blank=True, null=True)),
                ('precision_plot_data', models.TextField(blank=True, max_length=20000, null=True)),
                ('recall_plot_data', models.TextField(blank=True, max_length=20000, null=True)),
                ('pr_thresholds', models.TextField(blank=True, max_length=20000, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('areaUnderPR', models.FloatField(blank=True, null=True)),
                ('specificity', models.FloatField(blank=True, null=True)),
                ('experiment_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('experiment_id', models.AutoField(primary_key=True, serialize=False)),
                ('experiment_type', models.CharField(blank=True, choices=[('input', 'Input'), ('columnformatchange', 'Column format change'), ('featureengineering', 'Feature engineering'), ('stationarity', 'Stationarity test'), ('manualvariableselection', 'Manual variable selection'), ('featureselection', 'Feature Selection'), ('classificationmodel', 'Build logistic regression model'), ('regressionmodel', 'Build regression model')], default='input', max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
                ('artefacts_directory', models.CharField(blank=True, max_length=100, null=True)),
                ('created_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('experiment_status', models.CharField(blank=True, choices=[('NOT_STARTED', 'NOT STARTED'), ('STARTED', 'STARTED'), ('IN_PROGRESS', 'IN PROGRESS'), ('DONE', 'DONE'), ('ERROR', 'ERROR')], max_length=20, null=True)),
                ('do_create_data', models.BooleanField(default=True)),
                ('run_now', models.BooleanField(default=False)),
                ('lock_now', models.BooleanField(default=False)),
                ('run_start_time', models.DateTimeField(blank=True, null=True)),
                ('run_end_time', models.DateTimeField(blank=True, null=True)),
                ('run_in_the_background', models.BooleanField(default=False)),
                ('enable_spark', models.BooleanField(default=False)),
                ('all_preceding_experiments', models.TextField(blank=True, max_length=20000, null=True)),
                ('test_flag_new', models.BooleanField(blank=True, default=False, editable=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on_date'],
            },
        ),
        migrations.CreateModel(
            name='RegressionMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('r_squared', models.FloatField(blank=True, null=True)),
                ('mse', models.FloatField(blank=True, null=True)),
                ('rmse', models.FloatField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
                ('explained_variance', models.FloatField(blank=True, null=True)),
                ('experiment_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResultsFeatureselection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constant_features', models.TextField(blank=True, max_length=20000, null=True)),
                ('quasi_constant_features', models.TextField(blank=True, max_length=20000, null=True)),
                ('correlated_features', models.TextField(blank=True, max_length=20000, null=True)),
                ('duplicated_features', models.TextField(blank=True, max_length=20000, null=True)),
                ('non_numeric_columns', models.TextField(blank=True, max_length=20000, null=True)),
                ('shortlisted_features', models.TextField(blank=True, max_length=20000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_flag', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Traindata',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('train_data_name', models.CharField(blank=True, max_length=100, null=True)),
                ('train_path', models.CharField(max_length=50)),
                ('no_of_cols', models.IntegerField(blank=True, null=True)),
                ('no_of_rows', models.IntegerField(blank=True, null=True)),
                ('column_names', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Manualvariableselection',
            fields=[
                ('experiment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logistic_build.experiment')),
                ('input_columns', models.TextField(blank=True, max_length=20000, null=True)),
                ('keep_columns', models.TextField(blank=True, max_length=20000, null=True)),
            ],
            bases=('logistic_build.experiment',),
        ),
        migrations.CreateModel(
            name='Stationarity',
            fields=[
                ('experiment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logistic_build.experiment')),
                ('do_kpss', models.BooleanField(default=False)),
                ('do_adf', models.BooleanField(default=False)),
                ('significance', models.FloatField(blank=True, default=0.05, null=True)),
                ('kpss_pass_vars', models.TextField(blank=True, max_length=20000, null=True)),
                ('adf_pass_vars', models.TextField(blank=True, max_length=20000, null=True)),
                ('stationarity_passed', models.TextField(blank=True, max_length=20000, null=True)),
            ],
            bases=('logistic_build.experiment',),
        ),
        migrations.CreateModel(
            name='Variables',
            fields=[
                ('variable_id', models.AutoField(primary_key=True, serialize=False)),
                ('variable_name', models.CharField(blank=True, max_length=100, null=True)),
                ('variable_type', models.CharField(choices=[('Dependent', 'Dependent'), ('Independent', 'Independent')], default='Independent', max_length=20)),
                ('experiment_status', models.CharField(choices=[('PASS', 'PASS'), ('FAIL', 'FAIL')], default='FAIL', max_length=20)),
                ('experiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='logistic_build.experiment')),
                ('traindata', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='logistic_build.traindata')),
            ],
        ),
        migrations.CreateModel(
            name='TopModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_features', models.TextField(blank=True, max_length=20000, null=True)),
                ('cv_scores', models.TextField(blank=True, max_length=20000, null=True)),
                ('avg_score', models.FloatField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistic_build.resultsfeatureselection')),
            ],
        ),
        migrations.CreateModel(
            name='ResultsRegressionmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coefficients', models.TextField(blank=True, max_length=20000, null=True)),
                ('intercept', models.FloatField(blank=True, null=True)),
                ('feature_cols', models.TextField(blank=True, max_length=20000, null=True)),
                ('tvalues', models.TextField(blank=True, max_length=20000, null=True)),
                ('pvalues', models.TextField(blank=True, max_length=20000, null=True)),
                ('dispersion', models.FloatField(blank=True, null=True)),
                ('coefficientsStandardErrors', models.TextField(blank=True, max_length=20000, null=True)),
                ('nullDeviance', models.FloatField(blank=True, null=True)),
                ('residualDegreeOfFreedomNull', models.FloatField(blank=True, null=True)),
                ('residualDegreeOfFreedom', models.FloatField(blank=True, null=True)),
                ('deviance', models.FloatField(blank=True, null=True)),
                ('AIC', models.FloatField(blank=True, null=True)),
                ('test_results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='logistic_build.regressionmetrics')),
                ('train_results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='train_results', to='logistic_build.regressionmetrics')),
            ],
        ),
        migrations.CreateModel(
            name='ResultsClassificationmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coefficients', models.TextField(blank=True, max_length=20000, null=True)),
                ('features', models.TextField(blank=True, max_length=20000, null=True)),
                ('train_nrows', models.IntegerField(blank=True, null=True)),
                ('test_nrows', models.IntegerField(blank=True, null=True)),
                ('test_results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='logistic_build.classificationmetrics')),
                ('train_results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='train_results', to='logistic_build.classificationmetrics')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationModelBuild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('message', models.TextField()),
                ('experiment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('experiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistic_build.experiment')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='experiment',
            name='output_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='output_data', to='logistic_build.traindata'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='previous_experiment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistic_build.experiment'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='test_data_split',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_data_split_randomly', to='logistic_build.traindata'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='testdata',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='input_test_data', to='logistic_build.traindata'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='train_data_split',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='train_data_split_randomly', to='logistic_build.traindata'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='traindata',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='input_train_data', to='logistic_build.traindata'),
        ),
        migrations.CreateModel(
            name='Regressionmodel',
            fields=[
                ('experiment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logistic_build.experiment')),
                ('label_col', models.CharField(blank=True, max_length=100, null=True)),
                ('train_split', models.FloatField(blank=True, null=True)),
                ('test_split', models.FloatField(blank=True, null=True)),
                ('feature_cols', models.TextField(blank=True, max_length=20000, null=True)),
                ('ignored_columns', models.TextField(blank=True, max_length=20000, null=True)),
                ('cross_validation', models.BooleanField(default=False)),
                ('results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistic_build.resultsregressionmodel')),
            ],
            bases=('logistic_build.experiment',),
        ),
        migrations.CreateModel(
            name='Featureselection',
            fields=[
                ('experiment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logistic_build.experiment')),
                ('label_col', models.CharField(blank=True, max_length=100, null=True)),
                ('feature_cols', models.TextField(blank=True, max_length=20000, null=True)),
                ('train_split', models.FloatField(blank=True, null=True)),
                ('test_split', models.FloatField(blank=True, null=True)),
                ('exclude_features', models.TextField(blank=True, max_length=20000, null=True)),
                ('fixed_features', models.TextField(blank=True, max_length=20000, null=True)),
                ('cross_validation', models.IntegerField(blank=True, default=5, null=True)),
                ('max_features', models.IntegerField(blank=True, default=5, null=True)),
                ('min_features', models.IntegerField(blank=True, default=2, null=True)),
                ('short_list_max_features', models.IntegerField(blank=True, default=5, null=True)),
                ('regression_or_classification', models.CharField(choices=[('regression', 'Regression'), ('classification', 'Classification')], default='regression', max_length=20)),
                ('scoring', models.CharField(choices=[('roc_auc', 'ROC AUC'), ('mse', 'MSE')], default='roc_auc', max_length=10)),
                ('remove_constant_features', models.BooleanField(blank=True, default=False, null=True)),
                ('remove_quasi_constant_features', models.BooleanField(blank=True, default=False, null=True)),
                ('variance_threshold', models.BooleanField(blank=True, default=False, null=True)),
                ('correlation_check', models.BooleanField(blank=True, default=False, null=True)),
                ('correlation_threshold', models.FloatField(blank=True, null=True)),
                ('treat_missing', models.BooleanField(blank=True, default=False, null=True)),
                ('variables_selected', models.BooleanField(blank=True, default=False, null=True)),
                ('do_exhaustive_search', models.BooleanField(blank=True, default=False, null=True)),
                ('results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistic_build.resultsfeatureselection')),
            ],
            bases=('logistic_build.experiment',),
        ),
        migrations.CreateModel(
            name='Classificationmodel',
            fields=[
                ('experiment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logistic_build.experiment')),
                ('label_col', models.CharField(max_length=25)),
                ('train_split', models.FloatField(blank=True, null=True)),
                ('test_split', models.FloatField(blank=True, null=True)),
                ('feature_cols', models.TextField(max_length=20000)),
                ('ignored_columns', models.TextField(blank=True, max_length=20000, null=True)),
                ('cross_validation', models.IntegerField(blank=True, default=0, null=True)),
                ('save_train_test_data', models.BooleanField(blank=True, default=False, null=True)),
                ('results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistic_build.resultsclassificationmodel')),
            ],
            bases=('logistic_build.experiment',),
        ),
    ]
